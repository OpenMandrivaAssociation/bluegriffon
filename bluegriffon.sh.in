#!/bin/sh
#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

## 
## Usage:
##
## $ Bluegriffon
##
## This script is meant to run a mozilla program from the mozilla
## rpm installation.
##
## The script will setup all the environment voodoo needed to make
## mozilla work.

cmdname=`basename $0`

##
## Variables
##
MOZ_ARCH=$(uname -m)
case $MOZ_ARCH in
	x86_64 | s390x | sparc64)
		MOZ_LIB_DIR="/usr/lib64"
		SECONDARY_LIB_DIR="/usr/lib"
		;;
	* )
		MOZ_LIB_DIR="/usr/lib"
		SECONDARY_LIB_DIR="/usr/lib64"
		;;
esac

MOZ_BLUEGRIFFON_FILE="application.ini"

if [ ! -r $MOZ_LIB_DIR/bluegriffon/$MOZ_BLUEGRIFFON_FILE ]; then
    if [ ! -r $SECONDARY_LIB_DIR/bluegriffon/$MOZ_BLUEGRIFFON_FILE ]; then
	echo "Error: $MOZ_LIB_DIR/bluegriffon/$MOZ_BLUEGRIFFON_FILE not found"
	if [ -d $SECONDARY_LIB_DIR ]; then
	    echo "       $SECONDARY_LIB_DIR/bluegriffon/$MOZ_BLUEGRIFFON_FILE not found"
	fi
	exit 1
    fi
    MOZ_LIB_DIR="$SECONDARY_LIB_DIR"
fi
MOZ_DIST_BIN="$MOZ_LIB_DIR/bluegriffon"
MOZ_XUL_DIR="$MOZ_LIB_DIR/XULRUNNER_DIRECTORY"
MOZ_PROGRAM="/usr/bin/XULRUNNER_BIN $MOZ_DIST_BIN/$MOZ_BLUEGRIFFON_FILE"
MOZ_LAUNCHER="$MOZ_DIST_BIN/run-mozilla.sh"
 
##
## Set MOZ_GRE_CONF
##
MOZ_GRE_CONF=/etc/gre.d/GRE_CONFIG.conf
if [ "$MOZ_LIB_DIR" == "/usr/lib64" ]; then
  MOZ_GRE_CONF=/etc/gre.d/GRE_CONFIG-64.conf
fi
export MOZ_GRE_CONF

##
## Set MOZILLA_FIVE_HOME
##
MOZILLA_FIVE_HOME="$MOZ_DIST_BIN"

export MOZILLA_FIVE_HOME

##
## Select the propper plugin dir
## Wrapped plug-ins are located in /lib/mozilla/plugins-wrapped
##
if [ -x "/usr/bin/mozilla-plugin-config" ]
then
  MOZ_PLUGIN_DIR="plugins-wrapped"
else
  MOZ_PLUGIN_DIR="plugins"
fi

##
## Make sure that we set the plugin path
##
if [ "$MOZ_PLUGIN_PATH" ]
then
  MOZ_PLUGIN_PATH=$MOZ_PLUGIN_PATH:$MOZ_LIB_DIR/mozilla/$MOZ_PLUGIN_DIR:$MOZ_DIST_BIN/$MOZ_PLUGIN_DIR
else
  MOZ_PLUGIN_PATH=$MOZ_LIB_DIR/mozilla/$MOZ_PLUGIN_DIR:$MOZ_DIST_BIN/$MOZ_PLUGIN_DIR
fi
export MOZ_PLUGIN_PATH

##
## Set MOZ_APP_LAUNCHER for gnome-session
##
export MOZ_APP_LAUNCHER="/usr/bin/bluegriffon"

##
## If plugins are wrapped, check them
##
if [ -x "/usr/bin/mozilla-plugin-config" ]
then
  /usr/bin/mozilla-plugin-config
fi

##
## Set FONTCONFIG_PATH for Xft/fontconfig
##
FONTCONFIG_PATH="/etc/fonts:${MOZILLA_FIVE_HOME}/res/Xft"
export FONTCONFIG_PATH

##
## In order to better support certain scripts (such as Indic and some CJK 
## scripts), Fedora builds its Xulrunner, with permission from the Mozilla 
## Corporation, with the Pango system as its text renderer.  This change 
## may negatively impact performance on some pages.  To disable the use of
## Pango, set MOZ_DISABLE_PANGO=1 in your environment before launching
## Bluegriffon.
##
#
# MOZ_DISABLE_PANGO=1
# export MOZ_DISABLE_PANGO
#

##
## Disable the GNOME crash dialog, Moz has it's own
##
GNOME_DISABLE_CRASH_DIALOG=1
export GNOME_DISABLE_CRASH_DIALOG


# Prepare command line arguments
script_args=""
pass_arg_count=0
while [ $# -gt $pass_arg_count ]
do
  case "$1" in
    -g | --debug)
      script_args="$script_args -g"
      debugging=1
      shift
      ;;
    -d | --debugger)
      if [ $# -gt 1 ]; then
        script_args="$script_args -d $2"
        shift 2
      else
        shift
      fi
      ;;
    *)
      # Move the unrecognized argument to the end of the list.
      arg="$1"
      shift
      set -- "$@" "$arg"
      pass_arg_count=`expr $pass_arg_count + 1`
      ;;
  esac
done

# Run the browser
debugging=0
if [ $debugging = 1 ]
then
  echo $MOZ_LAUNCHER $script_args $MOZ_PROGRAM "$@"
fi

exec $MOZ_LAUNCHER $script_args $MOZ_PROGRAM "$@"
